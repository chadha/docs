<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data on Lightelligence®</title>
    <link>https://mangogul.bitbucket.io/categories/data/</link>
    <description>Recent content in data on Lightelligence®</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 01 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mangogul.bitbucket.io/categories/data/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Processing Data</title>
      <link>https://mangogul.bitbucket.io/data/</link>
      <pubDate>Fri, 14 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mangogul.bitbucket.io/data/</guid>
      <description>There are four ways of retrieving the sensor data:
 Device-State / Digital Twin Aggregated Data Raw Data Last 1h  @Turing
 What is the difference between the four ways of retrieving sensor data? What is the typical use-cases? What are the contracts behind each of these endpoints, what are the guarantees? How quick can someone expect an answer? How quick does data show up in the dumps? What role does the device type play?</description>
    </item>
    
    <item>
      <title>Storing and Retrieving Sensor Data</title>
      <link>https://mangogul.bitbucket.io/devices/reporting-getting-started/</link>
      <pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://mangogul.bitbucket.io/devices/reporting-getting-started/</guid>
      <description>You got started with setting up a Raspberry Pi and transmitting configuration data such as the IP address to the OLT platform. See Connecting a Device in 3 Steps.
By walking through the process manually, you got an idea of how the elements of the OLT platform interact. see Walking Through the OLT Portal, Step by Step.
Now we add a new device type, to cover a typical IoT scenario: Storing time series sensor data in the OLT platform, and retrieving the data.</description>
    </item>
    
  </channel>
</rss>